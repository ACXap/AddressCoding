<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:enum="clr-namespace:AddressCoding.Entities;assembly=AddressCoding.Entities"
    xmlns:local="clr-namespace:AddressCoding.Style">

    <!--  Основной стиль для кнопок с иконками вместо текста  -->
    <Style x:Key="TextBlockWhithIconAwesome" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <!--  Текст для кнопки открытия помощи  -->
    <Style
        x:Key="TextBlockHelp"
        BasedOn="{StaticResource TextBlockWhithIconAwesome}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="Text" Value="{StaticResource FontAwesomeHelp}" />
    </Style>

    <!--  Текст для кнопки открытия папки программы  -->
    <Style
        x:Key="TextBlockFolder"
        BasedOn="{StaticResource TextBlockWhithIconAwesome}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="Text" Value="{StaticResource FontAwesomeFolderClose}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Text" Value="{StaticResource FontAwesomeFolderOpen}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Текст для кнопки открытия настроек  -->
    <Style
        x:Key="TextBlockSettings"
        BasedOn="{StaticResource TextBlockWhithIconAwesome}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="Text" Value="{StaticResource FontAwesomeSettings}" />
    </Style>

    <!--  Текст для кнопки сохранения -->
    <Style
        x:Key="TextBlockSave"
        BasedOn="{StaticResource TextBlockWhithIconAwesome}"
        TargetType="{x:Type TextBlock}">
        <Setter Property="Text" Value="{StaticResource FontAwesomeSave}" />
    </Style>

    <!--  Стиль для значка статуса  -->
    <Style x:Key="TextBlockStatus" TargetType="{x:Type TextBlock}">
       
        <Style.Resources>
            <Storyboard x:Key="flashAnimation">
                <DoubleAnimation
                            AutoReverse="True"
                            RepeatBehavior="Forever"
                            Storyboard.TargetProperty="Opacity"
                            From="1"
                            To="0"
                            Duration="0:0:0.5" />
            </Storyboard>
        </Style.Resources>
        
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="16" />
        <Style.Triggers>
            <Trigger Property="Tag" Value="{x:Static enum:StatusType.OK}">
                <Setter Property="Text" Value="{StaticResource FontAwesomeOk}" />
                <Setter Property="Foreground" Value="Green" />
                <Setter Property="ToolTip" Value="ОРПОНизировано успешно" />
            </Trigger>
            <Trigger Property="Tag" Value="{x:Static enum:StatusType.Error}">
                <Setter Property="Text" Value="{StaticResource FontAwesomeError}" />
                <Setter Property="Foreground" Value="Yellow" />
                <Setter Property="ToolTip" Value="ОРПОНизировано с ошибкой" />
            </Trigger>
            <Trigger Property="Tag" Value="{x:Static enum:StatusType.NotOrponing}">
                <Setter Property="Text" Value="{StaticResource FontAwesomeNotCheck}" />
                <Setter Property="ToolTip" Value="Не ОРПОНизировано" />
            </Trigger>
            <Trigger Property="Tag" Value="{x:Static enum:StatusType.OrponingNow}">
                <Setter Property="Text" Value="{StaticResource FontAwesomeCheckNow}" />
                <Setter Property="ToolTip" Value="ОРПОНизируется сейча" />
                <Trigger.EnterActions>
                    <BeginStoryboard Name="flash" Storyboard="{StaticResource flashAnimation}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="flash" />
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Стиль для отображения времени  -->
    <Style x:Key="TextBlockTime" TargetType="{x:Type TextBlock}">
        <Setter Property="Text" Value="{Binding DateTimeOrponing, StringFormat=\{0:G\}, ConverterCulture=ru}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding DateTimeOrponing.Year}" Value="1">
                <Setter Property="Text" Value="-" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>